{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dambr\\\\OneDrive\\\\Documentos\\\\GitHub\\\\React\\\\Projetos\\\\meu-portifolio\\\\src\\\\ProjectShowCase\\\\ToggleProject.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToggleProject() {\n  _s();\n  const projectType = 'Back-End';\n  const amount = 2;\n  const [isToggle, setIsToggle] = useState(false);\n  const handleClick = () => {\n    if (isToggle) {\n      setIsToggle(false);\n      console.log('false');\n    } else {\n      setIsToggle(true);\n      console.log('true');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-project\",\n      onClick: () => handleClick(),\n      children: projectType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isToggle && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(ToggleProject, \"Ypcr9yM9RK6Ayrp0+5zoz6ENcIg=\");\n_c = ToggleProject;\nexport default ToggleProject;\nvar _c;\n$RefreshReg$(_c, \"ToggleProject\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ToggleProject","_s","projectType","amount","isToggle","setIsToggle","handleClick","console","log","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dambr/OneDrive/Documentos/GitHub/React/Projetos/meu-portifolio/src/ProjectShowCase/ToggleProject.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction ToggleProject() {\r\n\r\n  const projectType = 'Back-End'\r\n  const amount = 2\r\n\r\n\r\n  const [isToggle,setIsToggle] = useState(false)\r\n\r\n  const handleClick = () => {\r\n    if(isToggle){\r\n      setIsToggle(false)\r\n      console.log('false')\r\n    }else{\r\n      setIsToggle(true)\r\n      console.log('true')\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='toggle-project' onClick={() => handleClick()}>\r\n        {projectType} \r\n       \r\n      </div>\r\n      {isToggle && \r\n          <div>\r\n          work\r\n          </div>\r\n        }\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default ToggleProject"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAMC,WAAW,GAAG,UAAU;EAC9B,MAAMC,MAAM,GAAG,CAAC;EAGhB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAGF,QAAQ,EAAC;MACVC,WAAW,CAAC,KAAK,CAAC;MAClBE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC,MAAI;MACHH,WAAW,CAAC,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACrB;EACF,CAAC;EAKD,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEA,CAAA,KAAML,WAAW,CAAC,CAAE;MAAAG,QAAA,EAC1DP;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CAAC,EACLX,QAAQ,iBACLP,OAAA;MAAAY,QAAA,EAAK;IAEL;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAEV,CAAC;AAGP;AAACd,EAAA,CAnCQD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAqCtB,eAAeA,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}