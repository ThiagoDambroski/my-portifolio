{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dambr\\\\OneDrive\\\\Documentos\\\\GitHub\\\\React\\\\Projetos\\\\meu-portifolio\\\\src\\\\Projects\\\\ProjectContent\\\\Classes\\\\CarousselImages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './classes.css';\nimport ProjectArrowRight from '../../../assets/images/icon/project-right-arrow.png';\nimport ProjectArrowLeft from '../../../assets/images/icon/project-left-arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarousselImages(_ref) {\n  _s();\n  let {\n    images\n  } = _ref;\n  const [index, setIndex] = useState(0);\n  const [lightboxOpen, setLightBoxOpen] = useState(false);\n  const [lightboxIndex, setLightBoxIndex] = useState(0);\n  const nextProject = () => {\n    if (index + 1 >= images.length) {\n      setIndex(0);\n    } else {\n      setIndex(index + 1);\n    }\n  };\n  const previousProject = () => {\n    if (index - 1 < 0) {\n      setIndex(images.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n  const openLightbox = index => {\n    setLightBoxIndex(index);\n    setLightBoxOpen(true);\n  };\n  const closeLightbox = () => {\n    setLightBoxOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caroussel-images\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: ProjectArrowLeft,\n      className: \"project-arrow\",\n      onClick: previousProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"code-img\",\n      onClick: () => openLightbox(imgIndex)\n    }, imgIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: ProjectArrowRight,\n      className: \"project-arrow\",\n      onClick: nextProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), lightboxOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightbox-overlay\",\n      onClick: closeLightbox,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightbox-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-button\",\n          onClick: closeLightbox,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[lightboxIndex],\n          alt: \"lightbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(CarousselImages, \"Blp/xu3CJwoTzl7lllayvXAgbVM=\");\n_c = CarousselImages;\nexport default CarousselImages;\nvar _c;\n$RefreshReg$(_c, \"CarousselImages\");","map":{"version":3,"names":["React","useState","ProjectArrowRight","ProjectArrowLeft","jsxDEV","_jsxDEV","CarousselImages","_ref","_s","images","index","setIndex","lightboxOpen","setLightBoxOpen","lightboxIndex","setLightBoxIndex","nextProject","length","previousProject","openLightbox","closeLightbox","className","children","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","image","imgIndex","alt","_c","$RefreshReg$"],"sources":["C:/Users/dambr/OneDrive/Documentos/GitHub/React/Projetos/meu-portifolio/src/Projects/ProjectContent/Classes/CarousselImages.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './classes.css';\r\nimport ProjectArrowRight from '../../../assets/images/icon/project-right-arrow.png';\r\nimport ProjectArrowLeft from '../../../assets/images/icon/project-left-arrow.png';\r\n\r\nfunction CarousselImages({ images }) {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const [lightboxOpen,setLightBoxOpen] = useState(false)\r\n  const [lightboxIndex,setLightBoxIndex] = useState(0)\r\n\r\n  \r\n\r\n  const nextProject = () => {\r\n    if (index + 1 >= images.length) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(index + 1);\r\n    }\r\n  }\r\n\r\n  const previousProject = () => {\r\n    if (index - 1 < 0) {\r\n      setIndex(images.length - 1);\r\n    } else {\r\n      setIndex(index - 1);\r\n    }\r\n  }\r\n\r\n  const openLightbox = (index) => {\r\n    setLightBoxIndex(index)\r\n    setLightBoxOpen(true)\r\n  }\r\n\r\n  const closeLightbox = () => {\r\n    setLightBoxOpen(false)\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className='caroussel-images'>\r\n      <img src={ProjectArrowLeft} className='project-arrow' onClick={previousProject} />\r\n      {images.map((image, imgIndex) => \r\n        <img\r\n          key={imgIndex}\r\n          src={image}\r\n          className='code-img'\r\n          onClick={() => openLightbox(imgIndex)}\r\n        />\r\n      )}\r\n      \r\n      <img src={ProjectArrowRight} className='project-arrow' onClick={nextProject} />\r\n      {lightboxOpen && (\r\n        <div className='lightbox-overlay' onClick={closeLightbox}>\r\n          <div className='lightbox-content'>\r\n            <span className='close-button' onClick={closeLightbox}>X</span>\r\n            <img src={images[lightboxIndex]} alt='lightbox' />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CarousselImages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}