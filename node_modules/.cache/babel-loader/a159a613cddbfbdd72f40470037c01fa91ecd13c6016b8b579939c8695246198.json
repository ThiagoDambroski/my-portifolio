{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dambr\\\\OneDrive\\\\Documentos\\\\GitHub\\\\React\\\\Projetos\\\\meu-portifolio\\\\src\\\\Projects\\\\ProjectContent\\\\Classes\\\\Classes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './classes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Classes(_ref) {\n  _s();\n  let {\n    informationPage\n  } = _ref;\n  const [isListVisible, setListVisible] = useState(Array(informationPage.classes.length).fill(false));\n  const toggleList = index => {\n    const updateList = [...isListVisible];\n    updateList[index] = !updateList[index];\n    setListVisible(updateList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"labels\",\n    children: informationPage.classes.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => toggleList(index),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), isListVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"URl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), informationPage.methods[index].map((object, subIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: object.method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: object.URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: object.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this)]\n          }, subIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Classes, \"MRxNRNWKDFNtbOqmjzO8Z1v4/XU=\");\n_c = Classes;\nexport default Classes;\nvar _c;\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Classes","_ref","_s","informationPage","isListVisible","setListVisible","Array","classes","length","fill","toggleList","index","updateList","className","children","map","item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","methods","object","subIndex","method","URL","description","_c","$RefreshReg$"],"sources":["C:/Users/dambr/OneDrive/Documentos/GitHub/React/Projetos/meu-portifolio/src/Projects/ProjectContent/Classes/Classes.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport './classes.css'\r\n\r\nfunction Classes({informationPage}) {\r\n\r\n    const [isListVisible, setListVisible] = useState(Array(informationPage.classes.length).fill(false));\r\n\r\n    const toggleList = (index) => {\r\n        const updateList = [...isListVisible]\r\n        updateList[index] = !updateList[index]\r\n        setListVisible(updateList)\r\n    };\r\n    \r\n\r\n  \r\n  return (\r\n    <div className='labels'>\r\n        {informationPage.classes.map((item,index) => \r\n            \r\n            <>\r\n                <label onClick={() => toggleList(index)}>\r\n                    {item}\r\n                </label>\r\n                {isListVisible[index] && (\r\n\r\n                    <div>\r\n                        <table>\r\n                            <tr>\r\n                                <th>Method</th>\r\n                                <th>URl</th>\r\n                                <th>description</th>\r\n                            </tr>\r\n                            {informationPage.methods[index].map((object, subIndex) =>\r\n                                <tr key={subIndex}>\r\n                                    <td>{object.method}</td>\r\n                                    <td>{object.URL}</td>\r\n                                    <td>{object.description}</td>\r\n                                </tr>    \r\n                            )}\r\n                        </table>\r\n                    </div>\r\n                    \r\n                   \r\n                )}   \r\n            </>\r\n            \r\n        )} \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Classes"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}