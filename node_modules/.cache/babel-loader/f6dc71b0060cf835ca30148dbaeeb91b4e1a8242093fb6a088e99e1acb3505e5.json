{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dambr\\\\OneDrive\\\\Documentos\\\\GitHub\\\\React\\\\Projetos\\\\meu-portifolio\\\\src\\\\Projects\\\\ProjectContent\\\\Classes\\\\Classes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './classes.css';\nimport CarousselImages from './CarousselImages';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Classes(_ref) {\n  _s();\n  let {\n    informationPage\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const [isListVisible, setListVisible] = useState(Array(informationPage.classes.length).fill(false));\n  const toggleList = index => {\n    const updateList = [...isListVisible];\n    updateList[index] = !updateList[index];\n    setListVisible(updateList);\n    setActive(!active);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"labels\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), informationPage.classes.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => toggleList(index),\n        className: \"class-label\",\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), isListVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"method-table\",\n        children: [informationPage.images[index] && /*#__PURE__*/_jsxDEV(CarousselImages, {\n          images: informationPage.images[index],\n          options: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: informationPage.properties[index],\n          dataType: \"properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Methods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: informationPage.methods[index],\n          dataType: \"methods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Classes, \"em1ZZRNEPRXwiwUQoYIOZpisrpw=\");\n_c = Classes;\nexport default Classes;\nvar _c;\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"names":["React","useState","CarousselImages","Table","jsxDEV","_jsxDEV","Classes","_ref","_s","informationPage","active","setActive","isListVisible","setListVisible","Array","classes","length","fill","toggleList","index","updateList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Fragment","onClick","images","options","data","properties","dataType","methods","_c","$RefreshReg$"],"sources":["C:/Users/dambr/OneDrive/Documentos/GitHub/React/Projetos/meu-portifolio/src/Projects/ProjectContent/Classes/Classes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './classes.css';\r\nimport CarousselImages from './CarousselImages';\r\nimport Table from './Table';\r\n\r\n\r\nfunction Classes({ informationPage }) {\r\n\r\n  const [active,setActive] = useState(false)\r\n\r\n  const [isListVisible, setListVisible] = useState(\r\n    Array(informationPage.classes.length).fill(false)\r\n  );\r\n\r\n  const toggleList = (index) => {\r\n    const updateList = [...isListVisible];\r\n    updateList[index] = !updateList[index];\r\n    setListVisible(updateList);\r\n    setActive(!active)\r\n  };\r\n\r\n  return (\r\n    <div className='labels'>\r\n      <div className='center-title'>\r\n          <h1>Classes</h1>\r\n      </div>\r\n      {informationPage.classes.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          <label onClick={() => toggleList(index)} className='class-label'>{item}</label>\r\n          {isListVisible[index] && (\r\n            <div className='method-table'>\r\n              { (informationPage.images[index]) && \r\n                  <CarousselImages\r\n                    images={informationPage.images[index]}\r\n                    options={1}\r\n                  />\r\n              }\r\n              <h2>Properties</h2>\r\n                <Table\r\n                  data={informationPage.properties[index]}\r\n                  dataType={\"properties\"}\r\n                />\r\n              <h2>Methods</h2> \r\n                <Table\r\n                  data={informationPage.methods[index]}\r\n                  dataType={\"methods\"}\r\n                />\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Classes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}